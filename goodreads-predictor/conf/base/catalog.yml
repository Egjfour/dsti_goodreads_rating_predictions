
books_raw:
  type: pandas.CSVDataset
  filepath: abfs://python-ml-labs/01-raw/books.csv
  credentials: blob_data
  load_args:
    on_bad_lines: warn
    sep: ","

books_loaded:
  type: pandas.ParquetDataset
  filepath: data/01_raw/books_loaded.parquet
  save_args:
    engine: pyarrow

publisher_consolidation:
  type: pandas.CSVDataset
  filepath: abfs://python-ml-labs/03-primary/publisher_consolidation.txt
  credentials: blob_data
  load_args:
    on_bad_lines: warn
    sep: "\t"
    encoding: "latin-1"

# The following is in here twice so we can use it as both an input and output to the same node
price_by_isbn_input:
  type: pandas.ParquetDataset
  filepath: data/03_primary/book_prices.parquet
  save_args:
    engine: pyarrow

price_by_isbn:
  type: pandas.ParquetDataset
  filepath: data/03_primary/book_prices.parquet
  save_args:
    engine: pyarrow

book_genres:
  type: pandas.ParquetDataset
  filepath: data/03_primary/book_genres.parquet
  save_args:
    engine: pyarrow

title_embeddings_original:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/book_titles_embedded.parquet
  save_args:
    engine: pyarrow

authors_embeddings:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/author_embeddings.parquet
  save_args:
    engine: pyarrow

description_embeddings:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/description_embeddings.parquet
  save_args:
    engine: pyarrow

open_library_book_api_info_input:
  type: pickle.PickleDataset
  filepath: data/03_primary/open_library_book_api_info.pkl

open_library_book_api_info:
  type: pickle.PickleDataset
  filepath: data/03_primary/open_library_book_api_info.pkl

filtered_books:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/filtered_books.parquet

exclusions_summary:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/exclusions_summary.parquet

scope_waterfall_plot:
  type: plotly.JSONDataset
  filepath: data/02_intermediate/scope_waterfall_plot.json
  save_args:
    engine: auto

books_features:
  type: pandas.ParquetDataset
  filepath: data/04_feature/books_features.parquet

feature_cutoffs:
  type: json.JSONDataset
  filepath: data/04_feature/feature_cutoffs.json

factor_lumper:
  type: pickle.PickleDataset
  filepath: data/04_feature/factor_lumper.pkl

model_train:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/model_train.parquet

model_valid:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/model_valid.parquet

model_test:
  type: pandas.ParquetDataset
  filepath: data/05_model_input/model_test.parquet

flaml_model_trained:
  type: pickle.PickleDataset
  filepath: data/06_models/flaml_model.pkl

flaml_model_test_results:
  type: pandas.ParquetDataset
  filepath: data/07_model_outputs/flaml_model_test_results.parquet

flaml_regressor_scatterplot:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/flaml_regressor_scatterplot.png
  save_args:
    format: png

all_model_results:
  type: pandas.ParquetDataset
  filepath: data/08_reporting/all_model_results.parquet
